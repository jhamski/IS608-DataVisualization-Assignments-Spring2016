Y <- sample(1:100, 66, replace = TRUE)
X <- 1:66
DF <-cbind(X, Y)
DF
plot(DF)
?sample
library(datasets)
install.packages("ggplot2")
str(faithful)
plot(faithful)
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
scatter.plot<- function(data){
ggplot(data = data, aes(x = x, y = y)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
}
scatter.plot(faithful)
library(ggplot2)
scatter.plot(faithful)
str(faithful)
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
#theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
#theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "white"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank())
#theme(plot.title=element_text(color=color.title, size=10)) +
#theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
#theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
library(datasets)
library(ggplot2)
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank())
#theme(plot.title=element_text(color=color.title, size=10)) +
#theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
#theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
scatter.plot<- function(data){
ggplot(data = data, aes(x = x, y = y)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
steps=100
n_0=50000
percent_return=1
annuity<-function(x){x+(percent_return/100)*x-1000}
remaining.annuity<-n_0
for(i in 1:steps){
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n)
}
remaining.annuity=remaining.annuity[which(remaining.annuity>0)]
plot(remaining.annuity, ylim=c(0,n_0+10000),yaxs="i")
which.min(remaining.annuity)
?where
?while
kb
while(remaining.annuity>0){
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n)
}
warnings()
remaining.annuity<-n_0
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n)}
}
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n);break}
}
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n);break;}
}
for(i in 1:steps){
while(n>0){(
n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n));
break;}
}
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i]),
remaining.annuity=c(remaining.annuity,n);break;}
}
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i]),
remaining.annuity=c(remaining.annuity,n);break}
}
for(i in 1:steps){
while(n>0){n=annuity(remaining.annuity[i])
remaining.annuity=c(remaining.annuity,n);
break}
}
remaining.annuity<-n_0
for(i in 1:steps){
while(n>0){
n=annuity(remaining.annuity[i]);
remaining.annuity=c(remaining.annuity,n);break}
}
for(i in 1:steps){
n=1
while(n>0){
n=annuity(remaining.annuity[i]);
remaining.annuity=c(remaining.annuity,n);break}
}
remaining.annuity
setwd("~/Documents/Personal/IS608-DataVisualization-Assignments-Spring2016/Assignment 1")
setwd("~/Documents/Personal/IS608-DataVisualization-Assignments-Spring2016/Assignment 1")
library(readr)
library(ggplot2)
library(dplyr)
data <- read_csv("inc5000_data.csv")
ggplot(State.count, aes(x = factor(State))) + geom_bar(stat = "bin")
data %>% group_by(State) %>% tally(sort = T) -> State.count
ggplot(State.count, aes(x = factor(State))) + geom_bar(stat = "bin")
ggplot(State.count, aes(x = factor(State))) + geom_bar()
ggplot(State.count, aes(x = factor(State))) + geom_bar(aes(y=n))
data=State.count, geom="bar", stat="identity",
qplot(x=State, y=n, fill=variable,data=State.count, geom="bar", stat="identity", position="dodge")
qplot(x=State, y=n, data=State.count, geom="bar", stat="identity", position="dodge")
ggplot(State.count, aes(x=State, y=n)) + geom_bar() + coord_flip(stat="identity")
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
data %>% group_by(State) %>% tally(sort = T) -> State.count
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
State.count
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") #+ coord_flip()
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity", ordered=F) + coord_flip()
data %>% group_by(State) %>% tally(sort = T) -> State.count
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity", ordered=T) + coord_flip()
?geom_bar
str(State.count)
State.count$State %>% factor() -> State.count$State
str(State.count)
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
State.count
data %>% group_by(State) %>% tally(sort = T) -> State.count
State.count$State %>% factor(ordered = T) -> State.count$State
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
str(State.count)
data <- read_csv("inc5000_data.csv")
data %>% group_by(State) %>% tally(sort = T) -> State.count
State.count$State %>% factor(ordered = T) -> State.count$State
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
?factor
State.count$State %>% factor(levels=State.count$State) -> State.count$State
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip() + scale_y_continuous(trans = "reverse")
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip() + scale_x_continuous(trans = "reverse")
State.count$State %>% factor(rev(levels=State.count$State)) -> State.count$State
data %>% group_by(State) %>% tally(sort = T) -> State.count
State.count$State %>% factor(rev(levels=State.count$State)) -> State.count$State
State.count$State %>% factor(levels=rev(State.count$State)) -> State.count$State
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity") + coord_flip()
```
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity", position = "dodge") + coord_flip()
ggplot(State.count, aes(x=State, y=n)) + geom_bar(stat="identity", position = position_dodge(width=0.5)) + coord_flip()
